#!/usr/bin/env lua
require "luarocks.loader"

local Shell = require('minilib.shell')

function build_pack()
    Shell.sh([[
		#sudo apt-get install cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
		#curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
		
		source "$HOME/.cargo/env"

		build_root=~/ws/alacritty
        if [ -d $build_root ]; then
            cd $build_root
            git pull
        else
            git clone https://github.com/bucketsize/alacritty.git $build_root
            cd $build_root
        fi
        if [ -f target/release/alacritty ]; then
            echo "existing build ..."
        else
            cargo build --release --no-default-features --features=x11
        fi
        tar -czf /tmp/alacritty.$(arch).tar.gz \
            target/release/alacritty \
            extra/logo/alacritty-term.svg \
            extra/linux/Alacritty.desktop
    ]])
end

function setup_prebuilt()
	local rel = {
		aarch64 = "https://github.com/bucketsize/alacritty/releases/download/20220211/alacritty.aarch64.tar.gz",
		x86_64  = "https://github.com/bucketsize/alacritty/releases/download/20220723/alacritty.x86_64.tar.gz"
	}
	local arch = Shell.arch()
	Shell.wget(rel[arch], "/tmp/alacritty.tgz")
	Shell.sh([[
        tar -xvzf /tmp/alacritty.tgz -C /tmp
		mv /tmp/target/release/alacritty ~/.local/bin/
		]])
	if arch == "aarch64" then
		Shell.sh([[
			mv ~/.local/bin/alacritty ~/.local/bin/_alacritty
			cat > ~/.local/bin/alacritty <<-EOF
#!/bin/sh
LIBGL_ALWAYS_SOFTWARE=1 ~/.local/bin/_alacritty
EOF
			chmod +x ~/.local/bin/alacritty
			]])
	end
end

return {
	configure = function()
		Shell.ln ("$(pwd)/alacritty/my", "~/.config/alacritty")
	end,
	dependsOn = function()
		-- Shell.assert_file_exists("alacritty")
		-- Shell.assert_file_exists("cargo")
	end,
	installer = function()
		-- build_pack()
		setup_prebuilt()
	end
}

