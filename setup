#!/usr/bin/env lua

require("luarocks.loader")
local Sh = require("minilib.shell")
local Ut = require("minilib.util")
local Pr = require("minilib.process")
local M = require("minilib.monad")
local dist_task = require("dist_task")

local config_group = require("config").groups

local function update_configs(path, subhbs)
	print("#update_configs:", path)
	Pr.pipe()
		.add(Sh.find(path, "%.t$"))
		.add(function(f)
			if f then
				local cwd = require("lfs").currentdir()
			end
			return f
		end)
		.add(Sh.read())
		.add(Sh.sed(subhbs))
		.add(function(fline)
			if fline == nil then
				return nil
			end
			fline.path = fline.path:gsub("%.t", "")
			return fline
		end)
		.add(Sh.write("./"))
		.run()
end
local function prepare_config(name)
	local subcfg = require("config")
	local subhbs = {}
	for i, v in pairs(subcfg) do
		subhbs["{" .. i .. "}"] = v
	end
	update_configs(string.format("%s/", name), subhbs)
end
local function prepare_configs()
	local subcfg = require("config")
	local subhbs = {}
	for i, v in pairs(subcfg) do
		subhbs["{" .. i .. "}"] = v
	end
	update_configs("./", subhbs)
end
local function handle_deps(e)
    local pkgs = M.List.of(e.depends)
    :filter(function(i)
      return e.depends[i] == nil
    end)
    :fmap(function(i)
      local r = dist_task.pkgalias(i)
      if r then 
        return r 
      else
        return i 
      end
    end)
    print("handle_deps", Ut.tos(pkgs))
    return dist_task.pkginst(pkgs)
end
local function setup_config(name)
	local e = dofile(string.format([[%s/setup]], name))
  if e.depends then
    handle_deps(e)
  end
	if e.installer then
		e.installer()
	end
	if e.configure then
		e.configure()
	end
	print(name, "Ok")
	return 0
end
local function setup_configs(name)
	for k, v in pairs(config_group[name]) do
		if not (v.state == "noi") then
			setup_config(k)
		end
	end
	return 0
end

if arg[1] == nil then
	print("#setup *")
	prepare_configs()
	setup_configs("sys")
	setup_configs("common")
	setup_configs("openbox")
else
	print("#setup " .. arg[1])
	prepare_config(arg[1])
	setup_config(arg[1])
end
