#!/usr/bin/env lua
require "luarocks.loader"
package.path = '/?.lua;' .. package.path

print ("boostrapping minilib ...")
os.execute("minilib/setup")
print ("done.")

local Sh = require('minilib.shell')
local Pr = require('minilib.process')
local Ut = require('minilib.util')

local _HOME = os.getenv("HOME")

local config_group = {
    openbox = {
        Xresources = {},
		xinit = {},
        autostart = {},
        openbox = {},
        triggerhappy = {},
		tint2 = {},
		lemonbar = {}
    },
    bspwm = {
        Xresources = {},
		xinit = {},
        autostart = {},
        bspwm = {},
        sxhkd = {},
		tint2 = {},
		lemonbar = {}
    },
    common = {
		misc = {},
        fontconfig = {},
        gtk = {},
		qt5ct = {},
        dunst = {},
        firefox = {},
        chromium = {},
		qutebrowser = {},
        vim = {},
        nvim = {},
        mpd = {},
        ympd = {state="noi"},
        mpv = {},
        mxctl = {},
        frmad = {},
        lspd = {},
        tz = {},
        fseer = {state="noi"},
        conky = {},
        ["sysctl.d"] = {},
        pipewire = {},
		["qterminal.org"] = {},
        alacritty = {},
    },
    wayland_weston = {
        weston = {},
        foot = {},
        triggerhappy = {}
    }
}

function update_configs(path, subhbs)
    Pr.pipe()
        .add(Sh.find(path, "%.t$"))
		.add(function(f)
			if f then
				local cwd = require("lfs").currentdir()
				print ("update_configs>", cwd, f)
			end
			return f
		end)
        .add(Sh.read())
        .add(Sh.sed(subhbs))
		.add(function(fline)
			if fline == nil then return nil end
			fline.path = fline.path:gsub("%.t", "")
			return fline
		end)
        .add(Sh.write("./"))
        .run()
end
function termicon()
	return Pr.pipe()
		.add(Sh.find("/usr/share/icons", "32.*terminal.*"))
		.add(function(f)
			if f then
				print("termicon ->", f)
			end
			return f
		end)
		.run()
end
function default_subs(subs)
	subs["{term_icon}"] = termicon()
	return subs
end
function prepare_config(name)
    local subcfg = require("config")
	local subhbs = default_subs({})
	for i,v in pairs(subcfg) do
		subhbs["{"..i.."}"] = v
	end
	update_configs(string.format("%s/", name), subhbs)
end
function prepare_configs()
    local subcfg = require("config")
	local subhbs = default_subs({})
	for i,v in pairs(subcfg) do
		subhbs["{"..i.."}"] = v
	end
	update_configs("./", subhbs)
end
function setup_config(name)
	print("setup_config>", name)
	-- Sh.sh(string.format([[%s/setup]], name))
    local e = dofile(string.format([[%s/setup]], name))
	if e.dependsOn then e.dependsOn() end
	if e.configure then e.configure() end
	if e.installer then e.installer() end
	return 0
end
function setup_configs(name)
    print("setup_config group>", name)
    for k, v in pairs(config_group[name]) do
        if not (v.state == "noi") then
        	setup_config(k)
		end
    end
    return 0
end

if arg[1] == nil then
	print("setup> *")
	-- common
	prepare_configs()
	-- groups
	setup_configs("openbox")
	setup_configs("wayland_weston")
	setup_configs("common")
else
	print("setup> " .. arg[1])
	-- common
	prepare_config(arg[1])
	setup_config(arg[1])
end
